#!/usr/local/bin/ruby1.9 -w

=begin
  lists lines from file src
  usage: list.rb {-n} {range} file
=end

def setup
  argArray = []
  ARGV.each {|a| argArray.push(a)}  
  usage "no argumens provided?" if argArray.length == 0
  usage "woah...too many arguments?" if argArray.length > 3

  #set the file name or bail out
  fileName = tryFile(argArray.last)
  puts "#{fileName} is: good"
  argArray.delete_at(argArray.length-1)
  
    
  showLineNum = argArray[0] == "-n"? true : false;
  puts "showLineNum is: #{showLineNum}"
  argArray.delete_at(0) if showLineNum
  
  if argArray.length == 1
    lineRangeArray = argArray[0].split(",")
    goodRange = tryRange(lineRangeArray)
    puts "ranges are good: #{goodRange}"
  end  
  
end #setup


def tryFile(f)
  if File.file?(f)
    if File.readable?(f)
      return f
    else # file is not readable
      usage("ooops! #{f} is not readable")
    end
  else # not a file
    usage("#{f} is not a valid file")
  end
end

def tryRange(range)
 range.each do |i|
   usage "bogus range for #{i}, aborting..." if i =~ /[^\d,^\-,^$]/
   # puts "good range for #{i}"
 end
 return true
end





def parseArgs
  $debug.push("ARGV Length = #{ARGV.length}")
  case ARGV.length
  when 0 #abort
    usage
  when 1 #assumes file no lines
    tryfile(ARGV[0])
  when 2
    arg1 = ARGV[0]
    arg2 = ARGV[1]
    case arg1
    when "-n"
      tryfile(arg2,true)
    when "-","$"
      $debug.push("arg1 is a $ or -")
      tryfile(arg2)
    when /[,]/
      arg1.split(',').each{|r| $debug.push("your range is #{r}"); tryfile(arg2,false,r.to_i)}
      $debug.push("comma is true arg1")
    when /\d/
      $debug.push("arg1 containts a decimal char")
      if arg1.include?('-')
        $debug.push("arg1 has a dash and an integer")
        tryfile(arg2,false,arg1)
      else
        $debug.push("arg1 in an integer only")
        tryfile(arg2,false,arg1.to_i)
      end
    end
  when 3
    arg1 = ARGV[0]
    arg2 = ARGV[1]
    arg2 = ARGV[2]
  else
    usage "invalid arguments" 
  end
end



def usage(message = false)
  puts message if message
  puts "usage: list [-n] [#,#-#,#-$,-,$] file_name"
  abort 
end

=begin
def tryfile(f, line = false, range = '-')
  $debug.push("show line numbers: #{line}","trying to open file #{f}","range is set to #{range}")  
  if File.file?(f)
    if File.readable?(f)
      $debug.push("file #{f} is readable")
      output(f, line, range)
    else
      usage("ooops! #{f} is not readable")
    end
  else # not a file
    usage("#{f} is not a valid file")
  end
=end

def output(f, line, range)
  file_name = File.open(f)
  if range == ('-' or '$')
    file_name.each do |l|
      outstring = (line == true) ? ("#{$.} " + l) : l # dry up
      puts outstring
    end
  end
  if range.is_a?(Integer)
    $debug.push("range is an integer")
    file_name.each do |l|
      if $. == range
        outstring = (line == true) ? ("#{$.} " + l) : l # dry u
        puts outstring
      end
    end
  end
end

setup
# uncomment below for debug mode
# puts $debug