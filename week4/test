#!/usr/local/bin/ruby1.9 -w
#                 
# Author:  Glen Cuthbertson
# Date  :  09/23/09
# Program Name: test 
# Test Harness: tests arguments for list and runs script showing output for each input in testHash
# usage: ./test path/to/list script_input
# Note: This program works only on ruby 1.9 and above.

abort "usage: ./test script_file script_input" if ARGV.length < 2
script = "./#{ARGV[0]} "
puts "############# RUNNING TEST SUITE FOR: #{script} #####################"
testFile = ARGV[1]
testHash = 
{
"no arguments / params"                                         =>"",
"good file, no lines"                                           => testFile,
"bogus file"                                                    => "foo.src",
"good file, show lines"                                         =>"-n #{testFile}",
"good file, bogus line option"                                  =>"-fii #{testFile}",
"good file, single numb range"                                  =>"3 #{testFile}",
"good file, multi range"                                        =>"3,4-20,5 #{testFile}",
"good file, multi range, last line -"                           =>"3,4-20,5- #{testFile}",
"good file, multi range, last line $"                           =>"3,4-20,5-$ #{testFile}",
"good file, multi range, last line $ only"                      =>"3,4-20,5,$ #{testFile}",
"good file, single num range, show lines"                       =>"-n 3 #{testFile}",
"good file, multi range, show lines"                            =>"-n 3,4-20,5 #{testFile}",
"good file, multi range, last line -, show lines"               =>"-n 3,4-20,5- #{testFile}",
"good file, multi range, last line $, show lines"               =>"-n 3,4-20,5-$ #{testFile}",
"good file, multi range, last line $ only, show lines"          =>"-n 3,4-20,5,$ #{testFile}",
"good file, multi range, gnarly ranges"                         =>"-n 10,3-,2-4,4-2,-2,$,1-$,-$ #{testFile}",
"good file, multi range, last line $ only, show lines, OOB"     =>"-n 3,4-40,5,$ #{testFile}",
"good file, multi range, last line $ only, show lines, OOB, max"=>"-n 3,4-40,5 #{testFile}",
"good file, dash line range, full file from dash, show lines"   =>"-n - #{testFile}",
"good file, dollar, only last line, show lines"                 =>"-n $ #{testFile}",
"good file, dollar and dash, $- no quotes, show lines"          =>"-n -,$,$- #{testFile}",
"good file, dollar and dash quoting param, show lines"          =>"-n '-,$,$-' #{testFile}",
"Abbas test: same line multiple times, show lines"              =>"-n 5,5,5,5 #{testFile}",
"Abbas test: same range reversed, show lines"                   =>"-n 6-9,9-6 #{testFile}",
"Abbas test: dash to num, show lines"                           =>"-n -7 #{testFile}",
"Abbas test: multiple dash to num, show lines"                  =>"-n -7,-7,-7 #{testFile}",
"Abbas test: dash to num, num to dash, show lines"              =>"-n -7,7- #{testFile}",
"Abbas test: same num to same num, show lines"                  =>"-n 9-9 #{testFile}",
"Abbas test: last line to first, show lines"                    =>"-n '$-1' #{testFile}"
}
puts "Running #{testHash.size} tests:"
puts
testCount = 0
testHash.each do |k,v|
  testCount += 1
  puts "#{testCount})==============> Tests: #{k}"
  puts "command:         " + script + v
  puts "--outpput--     "
  system(script + v)
  puts 
end